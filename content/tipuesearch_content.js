var tipuesearch = {"pages": [{'title': '40823111', 'text': '', 'tags': '', 'url': '40823111.html'}, {'title': '上課內容', 'text': '', 'tags': '', 'url': '上課內容.html'}, {'title': 'W10-W11', 'text': '<iframe width="560" height="315" src="https://www.youtube.com/embed/U6qB6stkVik" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe> \n', 'tags': '', 'url': 'W10-W11.html'}, {'title': 'python', 'text': '說明如何利用 Python 程式讀取同學修課檔案 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n 55 \n 56 \n \n \n \n import   csv \n \xa0 \n # read student list \n \xa0 \n filename  =   \'E:/wcm2020/data/tmp/2020_spring_score/2a/2a_list.txt\' \n with  open (filename, encoding = "utf-8" ) as f: \n \xa0\xa0\xa0\xa0 content  =   f.readlines() \n #print(content) \n student  =   [x.strip()  for   x  in   content]  \n #print(student) \n \xa0 \n \xa0 \n # Timestamp, email, 修課名稱, url, score, desp, memo \n # 0, 1, 2, 3, 4, 5, 6 \n #total = 0 \n all   =   {} \n with  open ( \'y:/2020midterm.csv\' , encoding = "utf-8" ) as csv_file: \n \xa0\xa0\xa0\xa0 csv_reader  =   csv.reader(csv_file, delimiter = \',\' ) \n \xa0\xa0\xa0\xa0 #print(csv_reader) \n \xa0 \n \xa0\xa0\xa0\xa0 line_count  =   0 \n \xa0\xa0\xa0\xa0 for   row  in   csv_reader: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 if   line_count  = =   0 : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 #print(f\'Column names are {", ".join(row)}\') \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 line_count  + =   1 \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 else : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 student_num  =   row[ 1 ].split( "@" )[ 0 ] \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 #print(student_num) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 student_score  =   row[ 4 ] \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 #print(student_score) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 try : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 all .update({student_num: student_score}) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 except : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 all .update({student_num:  "error" }) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 #print(f\'\\t{row[0]} works in the {row[1]} department, and was born in {row[2]}.\') \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 #print(f\'\\t{row[4]}\') \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 #total += int(row[4]) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 line_count  + =   1 \n #print(all) \n #print(student) \n \xa0 \n \xa0 \n for   i  in   student: \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 #if i in all: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 #pass \n \xa0\xa0\xa0\xa0 #else: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 #print(str(i)) \n \xa0\xa0\xa0\xa0 \xa0 \n \xa0\xa0\xa0\xa0 try : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (i  +   "\\t"   +   all [i]) \n \xa0\xa0\xa0\xa0 except : \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 print (i  +   "\\t60" ) \n \xa0 \n \xa0\xa0\xa0\xa0 #print(f\'Processed {line_count} lines.\') \n \xa0\xa0\xa0\xa0 #print("平均=" + str(total/line_count)) \n \n \n \n \n \n 第4，5行\xa0 讀取(找到)資料夾E槽中的\xa0 list.txt\xa0 \n E:/wcm2020/data/tmp/2020_spring_score/2a/2a_list.txt\xa0 (存放list.txt 的路徑) \n flask 程式一 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n \n \n \n from   flask  import   Flask \n \xa0 \xa0 \n app  =   Flask(__name__) \n \xa0 \xa0 \n @app .route( \'/\' )  \n def   hello_world(): \n \xa0\xa0\xa0\xa0 return   \'Hello, From Flask!\' \n \xa0 \xa0 \n if   __name__ = =   \'__main__\' :  \n \xa0\xa0\xa0\xa0 app.run() \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'python.html'}, {'title': 'PyPDF2', 'text': '', 'tags': '', 'url': 'PyPDF2.html'}, {'title': '把1個PDF可以解取幾頁到幾頁', 'text': '\n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n \n \n \n # pypdf2_ex1.py \n import   os \n from   PyPDF2  import   PdfFileWriter, PdfFileReader \n \xa0 \n pdfReader  =   PdfFileReader( open ( "2002_Book_Real-WorldASPNETBuildingAConte.pdf" ,  "rb" )) \n information  =   [( "WhatIsCMS" , 18 , 45 )] \n \xa0 \n for   page  in   range ( len (information)): \n \xa0\xa0\xa0\xa0 pdf_writer  =   PdfFileWriter() \n \xa0\xa0\xa0\xa0 start  =   information[page][ 1 ] \n \xa0\xa0\xa0\xa0 end  =   information[page][ 2 ] \n \xa0\xa0\xa0\xa0 while   start< = end: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.addPage(pdfReader.getPage(start - 1 )) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 start + = 1 \n \xa0\xa0\xa0\xa0 if   not   os.path.exists( "./" ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 os.makedirs(savepath) \n \xa0\xa0\xa0\xa0 output_filename  =   \'{}_{}_page_{}.pdf\' . format (information[page][ 0 ],information[page][ 1 ], information[page][ 2 ]) \n \xa0\xa0\xa0\xa0 with  open (output_filename, \'wb\' ) as out: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.write(out) \n \n \n \n \n \n \n', 'tags': '', 'url': '把1個PDF可以解取幾頁到幾頁.html'}, {'title': '把1個PDF 可以解取多個分段', 'text': '\n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n \n \n \n # pypdf2_ex2.py \n import   os \n from   PyPDF2  import   PdfFileWriter, PdfFileReader \n \xa0 \n pdfReader  =   PdfFileReader( open ( "Beginning-Git-and-GitHub.pdf" ,  "rb" )) \n information  =   [( "GitAndGithub" , 17 , 105 ),( "GitAndGithub" , 107 , 194 ),( "GitAndGithub" , 196 , 289 )] \n \xa0 \n for   page  in   range ( len (information)): \n \xa0\xa0\xa0\xa0 pdf_writer  =   PdfFileWriter() \n \xa0\xa0\xa0\xa0 start  =   information[page][ 1 ] \n \xa0\xa0\xa0\xa0 end  =   information[page][ 2 ] \n \xa0\xa0\xa0\xa0 while   start< = end: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.addPage(pdfReader.getPage(start - 1 )) \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 start + = 1 \n \xa0\xa0\xa0\xa0 if   not   os.path.exists( "./" ): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 os.makedirs(savepath) \n \xa0\xa0\xa0\xa0 output_filename  =   \'{}_{}_page_{}.pdf\' . format (information[page][ 0 ],information[page][ 1 ], information[page][ 2 ]) \n \xa0\xa0\xa0\xa0 with  open (output_filename, \'wb\' ) as out: \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_writer.write(out) \n \n \n \n \n \n', 'tags': '', 'url': '把1個PDF 可以解取多個分段.html'}, {'title': '把PDF結合再一起', 'text': '\n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n \n \n \n # pypdf2_ex3.py \n # merge several pdf files \n import   sys \n import   PyPDF2 \n \xa0 \n pdf_write_object  =   PyPDF2.PdfFileWriter() \n \xa0 \n #for i in sys.argv[1:]: \n for   i  in   [ "WhatIsCMS.pdf" , "InforLifeCycle.pdf" , "EnterpriseContentManage.pdf" ]: \n \xa0\xa0\xa0\xa0 pdf_read_object  =   PyPDF2.PdfFileReader(i) \n \xa0\xa0\xa0\xa0 print ( \'processing file : \' +   i  +   \'number of pages : \'   + \xa0  str (pdf_read_object.numPages)) \n \xa0\xa0\xa0\xa0 for   page  in   range (pdf_read_object.numPages): \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 pdf_write_object.addPage(pdf_read_object.getPage(page)) \n \xa0 \n final_file_object  =   open ( \'2020CMS.pdf\' ,  \'wb\' ) \n pdf_write_object.write(final_file_object) \n final_file_object.close() \n \n \n \n \n', 'tags': '', 'url': '把PDF結合再一起.html'}]};
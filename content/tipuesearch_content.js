var tipuesearch = {"pages": [{'title': '40823111', 'text': '\n', 'tags': '', 'url': '40823111.html'}, {'title': '上課內容', 'text': '', 'tags': '', 'url': '上課內容.html'}, {'title': 'W10-W11', 'text': '程式內容 \n', 'tags': '', 'url': 'W10-W11.html'}, {'title': 'python', 'text': '說明如何利用 Python 程式讀取同學修課檔案 \n \n import csv\n \n# read student list\n \nfilename = \'E:/wcm2020/data/tmp/2020_spring_score/2a/2a_list.txt\'\nwith open(filename, encoding="utf-8") as f:\n    content = f.readlines()\n#print(content)\nstudent = [x.strip() for x in content] \n#print(student)\n \n \n# Timestamp, email, 修課名稱, url, score, desp, memo\n# 0, 1, 2, 3, 4, 5, 6\n#total = 0\nall = {}\nwith open(\'y:/2020midterm.csv\', encoding="utf-8") as csv_file:\n    csv_reader = csv.reader(csv_file, delimiter=\',\')\n    #print(csv_reader)\n \n    line_count = 0\n    for row in csv_reader:\n        if line_count == 0:\n            #print(f\'Column names are {", ".join(row)}\')\n            line_count += 1\n        else:\n            student_num = row[1].split("@")[0]\n            #print(student_num)\n            student_score = row[4]\n            #print(student_score)\n            try:\n                all.update({student_num: student_score})\n            except:\n                all.update({student_num: "error"})\n            #print(f\'\\t{row[0]} works in the {row[1]} department, and was born in {row[2]}.\')\n            #print(f\'\\t{row[4]}\')\n            #total += int(row[4])\n            line_count += 1\n#print(all)\n#print(student)\n \n \nfor i in student:\n     \n    #if i in all:\n        #pass\n    #else:\n        #print(str(i))\n     \n    try:\n        print(i + "\\t" + all[i])\n    except:\n        print(i + "\\t60")\n \n    #print(f\'Processed {line_count} lines.\')\n    #print("平均=" + str(total/line_count)) \n flask 程式一: \n \n \n from flask import Flask\n  \napp = Flask(__name__)\n  \n@app.route(\'/\') \ndef hello_world():\n    return \'Hello, From Flask!\'\n  \nif __name__== \'__main__\': \n    app.run() \n \n Flask 程式二: \n \n rom flask import Flask, render_template\nimport ssl\nimport csv\n  \ncontext = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)\ncontext.load_cert_chain(\'localhost.crt\', \'localhost.key\')\n  \napp = Flask(__name__)\n  \n@app.route(\'/\') \ndef hello_world():\n    return \'Hello, From Flask!\'\n  \n@app.route(\'/ROCflag\')\ndef drawROC():\n    return render_template("ROCflag.html")\n \n@app.route("/midterm")\ndef midterm():\n    # read student list\n \n    filename = \'1a_list.txt\'\n    with open(filename, encoding="utf-8") as f:\n        content = f.readlines()\n    #print(content)\n    student = [x.strip() for x in content] \n    #print(student)\n \n \n    # Timestamp, email, 修課名稱, url, score, desp, memo\n    # 0, 1, 2, 3, 4, 5, 6\n    #total = 0\n    all = {}\n    with open(\'2020midterm.csv\', encoding="utf-8") as csv_file:\n        csv_reader = csv.reader(csv_file, delimiter=\',\')\n        #print(csv_reader)\n \n        line_count = 0\n        for row in csv_reader:\n            if line_count == 0:\n                #print(f\'Column names are {", ".join(row)}\')\n                line_count += 1\n            else:\n                student_num = row[1].split("@")[0]\n                #print(student_num)\n                student_score = row[3]\n                #print(student_score)\n                try:\n                    all.update({student_num: student_score})\n                except:\n                    all.update({student_num: "error"})\n                #print(f\'\\t{row[0]} works in the {row[1]} department, and was born in {row[2]}.\')\n                #print(f\'\\t{row[4]}\')\n                #total += int(row[4])\n                line_count += 1\n    #print(all)\n    #print(student)\n \n    output = ""\n    for i in student:\n         \n        #if i in all:\n            #pass\n        #else:\n            #print(str(i))\n         \n        try:\n            output += (str(i) + ":  "+ str(all[i]) + " ")\n        except:\n            output += (str(i) + ": no data ")\n         \n    return output\n      \nif __name__== \'__main__\': \n    app.run(ssl_context=context) \n', 'tags': '', 'url': 'python.html'}, {'title': '加入ssh', 'text': 'download\xa0 putty \n \n 進入putty.exe 進行編輯 \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '加入ssh.html'}, {'title': 'W12', 'text': 'PyPDF2 \n', 'tags': '', 'url': 'W12.html'}, {'title': '把1個PDF可以解取幾頁到幾頁', 'text': '\n # pypdf2_ex1.py\nimport os\nfrom PyPDF2 import PdfFileWriter, PdfFileReader\n \npdfReader = PdfFileReader(open("2002_Book_Real-WorldASPNETBuildingAConte.pdf", "rb"))\ninformation = [("WhatIsCMS",18,45)]\n \nfor page in range(len(information)):\n    pdf_writer = PdfFileWriter()\n    start = information[page][1]\n    end = information[page][2]\n    while start<=end:\n        pdf_writer.addPage(pdfReader.getPage(start-1))\n        start+=1\n    if not os.path.exists("./"):\n        os.makedirs(savepath)\n    output_filename = \'{}_{}_page_{}.pdf\'.format(information[page][0],information[page][1], information[page][2])\n    with open(output_filename,\'wb\') as out:\n        pdf_writer.write(out) \n', 'tags': '', 'url': '把1個PDF可以解取幾頁到幾頁.html'}, {'title': '把1個PDF 可以解取多個分段', 'text': '# pypdf2_ex2.py\nimport os\nfrom PyPDF2 import PdfFileWriter, PdfFileReader\n \npdfReader = PdfFileReader(open("Beginning-Git-and-GitHub.pdf", "rb"))\ninformation = [("GitAndGithub",17,105),("GitAndGithub",107,194),("GitAndGithub",196,289)]\n \nfor page in range(len(information)):\n    pdf_writer = PdfFileWriter()\n    start = information[page][1]\n    end = information[page][2]\n    while start<=end:\n        pdf_writer.addPage(pdfReader.getPage(start-1))\n        start+=1\n    if not os.path.exists("./"):\n        os.makedirs(savepath)\n    output_filename = \'{}_{}_page_{}.pdf\'.format(information[page][0],information[page][1], information[page][2])\n    with open(output_filename,\'wb\') as out:\n        pdf_writer.write(out)\n \n', 'tags': '', 'url': '把1個PDF 可以解取多個分段.html'}, {'title': '把PDF結合再一起', 'text': '\n # pypdf2_ex3.py\n# merge several pdf files\nimport sys\nimport PyPDF2\n \npdf_write_object = PyPDF2.PdfFileWriter()\n \n#for i in sys.argv[1:]:\nfor i in ["WhatIsCMS.pdf","InforLifeCycle.pdf","EnterpriseContentManage.pdf"]:\n    pdf_read_object = PyPDF2.PdfFileReader(i)\n    print(\'processing file : \'+ i + \'number of pages : \' +  str(pdf_read_object.numPages))\n    for page in range(pdf_read_object.numPages):\n        pdf_write_object.addPage(pdf_read_object.getPage(page))\n \nfinal_file_object = open(\'2020CMS.pdf\', \'wb\')\npdf_write_object.write(final_file_object)\nfinal_file_object.close() \n \n', 'tags': '', 'url': '把PDF結合再一起.html'}, {'title': 'W13-W15', 'text': '新建虛擬主機(VirtuaBox) \n \n 並下載(Ubuntu) \n \n \n \n 我們一開始是從 get-pip.py 下載pip ，但是我們install是 windows 版的(python w .exe) \n 要改成python.exe \n \n', 'tags': '', 'url': 'W13-W15.html'}, {'title': 'W16-W17', 'text': 'WSGI \n WSGI，全稱 Web Server Gateway Interface，或者 Python Web Server Gateway Interface ，是為 Python 語言定義的 Web 伺服器和 Web 應用程式或框架之間的一種簡單而通用的介面。 這東西是一個Gateway，也就是閘道器。閘道器的作用就是在協議之間進行轉換。 \n 金鑰 \n python wsgi.py(打開你的Python)，缺少什麼軟件(pip install 軟件名稱) \n \n \n 進入googl\xa0 API\xa0 \xa0download\xa0 \xa0並且進入 \n \n 設定使用者 及網域 和儲存ID及密碼(oauth_scrum.txt) \n \n \n 然後就有了(successful) \n \n \n \n', 'tags': '', 'url': 'W16-W17.html'}]};
<h1>40823111</h1>
<p><img alt="" height="222" src="/images/topcms_6b870.jpg" width="500"/></p>
<h1>上課內容</h1>
<h2>W10-W11</h2>
<p>&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/U6qB6stkVik" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;</p>
<h3>python</h3>
<p>說明如何利用 Python 程式讀取同學修課檔案</p>
<div class="line number1 index0 alt2"><code class="py keyword"></code></div>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import csv
 
# read student list
 
filename = 'E:/wcm2020/data/tmp/2020_spring_score/2a/2a_list.txt'
with open(filename, encoding="utf-8") as f:
    content = f.readlines()
#print(content)
student = [x.strip() for x in content] 
#print(student)
 
 
# Timestamp, email, 修課名稱, url, score, desp, memo
# 0, 1, 2, 3, 4, 5, 6
#total = 0
all = {}
with open('y:/2020midterm.csv', encoding="utf-8") as csv_file:
    csv_reader = csv.reader(csv_file, delimiter=',')
    #print(csv_reader)
 
    line_count = 0
    for row in csv_reader:
        if line_count == 0:
            #print(f'Column names are {", ".join(row)}')
            line_count += 1
        else:
            student_num = row[1].split("@")[0]
            #print(student_num)
            student_score = row[4]
            #print(student_score)
            try:
                all.update({student_num: student_score})
            except:
                all.update({student_num: "error"})
            #print(f'\t{row[0]} works in the {row[1]} department, and was born in {row[2]}.')
            #print(f'\t{row[4]}')
            #total += int(row[4])
            line_count += 1
#print(all)
#print(student)
 
 
for i in student:
     
    #if i in all:
        #pass
    #else:
        #print(str(i))
     
    try:
        print(i + "\t" + all[i])
    except:
        print(i + "\t60")
 
    #print(f'Processed {line_count} lines.')
    #print("平均=" + str(total/line_count))</pre>
<h4>flask 程式一:</h4>
<div></div>
<p></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask
  
app = Flask(__name__)
  
@app.route('/') 
def hello_world():
    return 'Hello, From Flask!'
  
if __name__== '__main__': 
    app.run()</pre>
<p></p>
<p>Flask 程式二:</p>
<div></div>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">rom flask import Flask, render_template
import ssl
import csv
  
context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
context.load_cert_chain('localhost.crt', 'localhost.key')
  
app = Flask(__name__)
  
@app.route('/') 
def hello_world():
    return 'Hello, From Flask!'
  
@app.route('/ROCflag')
def drawROC():
    return render_template("ROCflag.html")
 
@app.route("/midterm")
def midterm():
    # read student list
 
    filename = '1a_list.txt'
    with open(filename, encoding="utf-8") as f:
        content = f.readlines()
    #print(content)
    student = [x.strip() for x in content] 
    #print(student)
 
 
    # Timestamp, email, 修課名稱, url, score, desp, memo
    # 0, 1, 2, 3, 4, 5, 6
    #total = 0
    all = {}
    with open('2020midterm.csv', encoding="utf-8") as csv_file:
        csv_reader = csv.reader(csv_file, delimiter=',')
        #print(csv_reader)
 
        line_count = 0
        for row in csv_reader:
            if line_count == 0:
                #print(f'Column names are {", ".join(row)}')
                line_count += 1
            else:
                student_num = row[1].split("@")[0]
                #print(student_num)
                student_score = row[3]
                #print(student_score)
                try:
                    all.update({student_num: student_score})
                except:
                    all.update({student_num: "error"})
                #print(f'\t{row[0]} works in the {row[1]} department, and was born in {row[2]}.')
                #print(f'\t{row[4]}')
                #total += int(row[4])
                line_count += 1
    #print(all)
    #print(student)
 
    output = ""
    for i in student:
         
        #if i in all:
            #pass
        #else:
            #print(str(i))
         
        try:
            output += (str(i) + ": <a href='/get_page/python/" + str(all[i]) + "'>"+ str(all[i]) + "</a><br/>")
        except:
            output += (str(i) + ": no data<br/>")
         
    return output
      
if __name__== '__main__': 
    app.run(ssl_context=context)</pre>
<h2>W12</h2>
<p>PyPDF2</p>
<h3>把1個PDF可以解取幾頁到幾頁</h3>
<p></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false"># pypdf2_ex1.py
import os
from PyPDF2 import PdfFileWriter, PdfFileReader
 
pdfReader = PdfFileReader(open("2002_Book_Real-WorldASPNETBuildingAConte.pdf", "rb"))
information = [("WhatIsCMS",18,45)]
 
for page in range(len(information)):
    pdf_writer = PdfFileWriter()
    start = information[page][1]
    end = information[page][2]
    while start&lt;=end:
        pdf_writer.addPage(pdfReader.getPage(start-1))
        start+=1
    if not os.path.exists("./"):
        os.makedirs(savepath)
    output_filename = '{}_{}_page_{}.pdf'.format(information[page][0],information[page][1], information[page][2])
    with open(output_filename,'wb') as out:
        pdf_writer.write(out)</pre>
<h3>把1個PDF 可以解取多個分段</h3>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false"># pypdf2_ex2.py
import os
from PyPDF2 import PdfFileWriter, PdfFileReader
 
pdfReader = PdfFileReader(open("Beginning-Git-and-GitHub.pdf", "rb"))
information = [("GitAndGithub",17,105),("GitAndGithub",107,194),("GitAndGithub",196,289)]
 
for page in range(len(information)):
    pdf_writer = PdfFileWriter()
    start = information[page][1]
    end = information[page][2]
    while start&lt;=end:
        pdf_writer.addPage(pdfReader.getPage(start-1))
        start+=1
    if not os.path.exists("./"):
        os.makedirs(savepath)
    output_filename = '{}_{}_page_{}.pdf'.format(information[page][0],information[page][1], information[page][2])
    with open(output_filename,'wb') as out:
        pdf_writer.write(out)
</pre>
<h3>把PDF結合再一起</h3>
<div class="line number1 index0 alt2"><code class="py comments"></code></div>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false"># pypdf2_ex3.py
# merge several pdf files
import sys
import PyPDF2
 
pdf_write_object = PyPDF2.PdfFileWriter()
 
#for i in sys.argv[1:]:
for i in ["WhatIsCMS.pdf","InforLifeCycle.pdf","EnterpriseContentManage.pdf"]:
    pdf_read_object = PyPDF2.PdfFileReader(i)
    print('processing file : '+ i + 'number of pages : ' +  str(pdf_read_object.numPages))
    for page in range(pdf_read_object.numPages):
        pdf_write_object.addPage(pdf_read_object.getPage(page))
 
final_file_object = open('2020CMS.pdf', 'wb')
pdf_write_object.write(final_file_object)
final_file_object.close()</pre>
<p><img alt="" height="388" src="/images/1592591548488.jpg" width="549"/></p>
<h2>W13-W15</h2>
<p>新建虛擬主機(VirtuaBox)<img alt="" height="304" src="/images/1592582575709.jpg" width="526"/></p>
<p>並下載(Ubuntu)</p>
<p><img alt="" height="298" src="/images/1592582858271.jpg" width="516"/></p>
<p></p>
<p><span>我們一開始是從 get-pip.py 下載pip ，但是我們install是<strong>windows</strong><span>版的(python</span><strong>w</strong><span>.exe)</span></span></p>
<p><span><span>要改成python.exe</span></span></p>
<p><img alt="" height="346" src="/images/1592584228542.jpg" width="511"/></p>
<p><img alt="" height="369" src="/images/1592583698891.jpg" width="507"/></p>
<h2>W16-W17</h2>
<p>WSGI</p>
<p><span>WSGI，全稱 Web Server Gateway Interface，或者 Python Web Server Gateway Interface ，是為 Python 語言定義的 Web 伺服器和 Web 應用程式或框架之間的一種簡單而通用的介面。</span><span>這東西是一個Gateway，也就是閘道器。閘道器的作用就是在協議之間進行轉換。</span></p>
<p>金鑰</p>
<p>python wsgi.py(打開你的Python)，缺少什麼軟件(pip install 軟件名稱)</p>
<p><img alt="" height="262" src="/images/1592592433259.jpg" width="506"/></p>
<p><img alt="" height="261" src="/images/1592592451469.jpg" width="502"/></p>
<p>進入googl  API   download   並且進入</p>
<p><img alt="" height="248" src="/images/1592592868463.jpg" width="291"/></p>
<p>設定使用者 及網域 和儲存ID及密碼(oauth_scrum.txt)</p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p></p>
<h1>40823111</h1>
<p>班級  設計一甲</p>
<p>座號  40823111</p>
<p>姓名 許耀中</p>
<p></p>
<p><img alt="" height="222" src="/images/topcms_6b870.jpg" width="500"/></p><h1>上課內容</h1>
<h2>W10-W11</h2>
<p>程式內容</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/U6qB6stkVik" width="560"></iframe></p>
<h3>python</h3>
<p>說明如何利用 Python 程式讀取同學修課檔案</p>
<div class="line number1 index0 alt2"><code class="py keyword"></code></div>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">import csv
 
# read student list
 
filename = 'E:/wcm2020/data/tmp/2020_spring_score/2a/2a_list.txt'
with open(filename, encoding="utf-8") as f:
    content = f.readlines()
#print(content)
student = [x.strip() for x in content] 
#print(student)
 
 
# Timestamp, email, 修課名稱, url, score, desp, memo
# 0, 1, 2, 3, 4, 5, 6
#total = 0
all = {}
with open('y:/2020midterm.csv', encoding="utf-8") as csv_file:
    csv_reader = csv.reader(csv_file, delimiter=',')
    #print(csv_reader)
 
    line_count = 0
    for row in csv_reader:
        if line_count == 0:
            #print(f'Column names are {", ".join(row)}')
            line_count += 1
        else:
            student_num = row[1].split("@")[0]
            #print(student_num)
            student_score = row[4]
            #print(student_score)
            try:
                all.update({student_num: student_score})
            except:
                all.update({student_num: "error"})
            #print(f'\t{row[0]} works in the {row[1]} department, and was born in {row[2]}.')
            #print(f'\t{row[4]}')
            #total += int(row[4])
            line_count += 1
#print(all)
#print(student)
 
 
for i in student:
     
    #if i in all:
        #pass
    #else:
        #print(str(i))
     
    try:
        print(i + "\t" + all[i])
    except:
        print(i + "\t60")
 
    #print(f'Processed {line_count} lines.')
    #print("平均=" + str(total/line_count))</pre>
<h4>flask 程式一:</h4>
<div></div>
<p></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask
  
app = Flask(__name__)
  
@app.route('/') 
def hello_world():
    return 'Hello, From Flask!'
  
if __name__== '__main__': 
    app.run()</pre>
<p></p>
<p>Flask 程式二:</p>
<div></div>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">rom flask import Flask, render_template
import ssl
import csv
  
context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)
context.load_cert_chain('localhost.crt', 'localhost.key')
  
app = Flask(__name__)
  
@app.route('/') 
def hello_world():
    return 'Hello, From Flask!'
  
@app.route('/ROCflag')
def drawROC():
    return render_template("ROCflag.html")
 
@app.route("/midterm")
def midterm():
    # read student list
 
    filename = '1a_list.txt'
    with open(filename, encoding="utf-8") as f:
        content = f.readlines()
    #print(content)
    student = [x.strip() for x in content] 
    #print(student)
 
 
    # Timestamp, email, 修課名稱, url, score, desp, memo
    # 0, 1, 2, 3, 4, 5, 6
    #total = 0
    all = {}
    with open('2020midterm.csv', encoding="utf-8") as csv_file:
        csv_reader = csv.reader(csv_file, delimiter=',')
        #print(csv_reader)
 
        line_count = 0
        for row in csv_reader:
            if line_count == 0:
                #print(f'Column names are {", ".join(row)}')
                line_count += 1
            else:
                student_num = row[1].split("@")[0]
                #print(student_num)
                student_score = row[3]
                #print(student_score)
                try:
                    all.update({student_num: student_score})
                except:
                    all.update({student_num: "error"})
                #print(f'\t{row[0]} works in the {row[1]} department, and was born in {row[2]}.')
                #print(f'\t{row[4]}')
                #total += int(row[4])
                line_count += 1
    #print(all)
    #print(student)
 
    output = ""
    for i in student:
         
        #if i in all:
            #pass
        #else:
            #print(str(i))
         
        try:
            output += (str(i) + ": <a href='/get_page/python/" + str(all[i]) + "'>"+ str(all[i]) + "</a><br/>")
        except:
            output += (str(i) + ": no data<br/>")
         
    return output
      
if __name__== '__main__': 
    app.run(ssl_context=context)</pre>
<h2>W12</h2>
<p>PyPDF2</p>
<h3>把1個PDF可以解取幾頁到幾頁</h3>
<p></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false"># pypdf2_ex1.py
import os
from PyPDF2 import PdfFileWriter, PdfFileReader
 
pdfReader = PdfFileReader(open("2002_Book_Real-WorldASPNETBuildingAConte.pdf", "rb"))
information = [("WhatIsCMS",18,45)]
 
for page in range(len(information)):
    pdf_writer = PdfFileWriter()
    start = information[page][1]
    end = information[page][2]
    while start&lt;=end:
        pdf_writer.addPage(pdfReader.getPage(start-1))
        start+=1
    if not os.path.exists("./"):
        os.makedirs(savepath)
    output_filename = '{}_{}_page_{}.pdf'.format(information[page][0],information[page][1], information[page][2])
    with open(output_filename,'wb') as out:
        pdf_writer.write(out)</pre>
<h3>把1個PDF 可以解取多個分段</h3>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false"># pypdf2_ex2.py
import os
from PyPDF2 import PdfFileWriter, PdfFileReader
 
pdfReader = PdfFileReader(open("Beginning-Git-and-GitHub.pdf", "rb"))
information = [("GitAndGithub",17,105),("GitAndGithub",107,194),("GitAndGithub",196,289)]
 
for page in range(len(information)):
    pdf_writer = PdfFileWriter()
    start = information[page][1]
    end = information[page][2]
    while start&lt;=end:
        pdf_writer.addPage(pdfReader.getPage(start-1))
        start+=1
    if not os.path.exists("./"):
        os.makedirs(savepath)
    output_filename = '{}_{}_page_{}.pdf'.format(information[page][0],information[page][1], information[page][2])
    with open(output_filename,'wb') as out:
        pdf_writer.write(out)
</pre>
<h3>把PDF結合再一起</h3>
<div class="line number1 index0 alt2"><code class="py comments"></code></div>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false"># pypdf2_ex3.py
# merge several pdf files
import sys
import PyPDF2
 
pdf_write_object = PyPDF2.PdfFileWriter()
 
#for i in sys.argv[1:]:
for i in ["WhatIsCMS.pdf","InforLifeCycle.pdf","EnterpriseContentManage.pdf"]:
    pdf_read_object = PyPDF2.PdfFileReader(i)
    print('processing file : '+ i + 'number of pages : ' +  str(pdf_read_object.numPages))
    for page in range(pdf_read_object.numPages):
        pdf_write_object.addPage(pdf_read_object.getPage(page))
 
final_file_object = open('2020CMS.pdf', 'wb')
pdf_write_object.write(final_file_object)
final_file_object.close()</pre>
<p><img alt="" height="388" src="/images/1592591548488.jpg" width="549"/></p>
<h2>W13-W15</h2>
<p>新建虛擬主機(VirtuaBox)<img alt="" height="304" src="/images/1592582575709.jpg" width="526"/></p>
<p><img alt="" height="343" src="/images/1592618332292.jpg" width="570"/></p>
<p>並下載(Ubuntu)</p>
<p><img alt="" height="298" src="/images/1592582858271.jpg" width="516"/></p>
<p><img alt="" height="377" src="/images/1592618569521.jpg" width="508"/></p>
<p><span></span></p>
<p>我們一開始是從 get-pip.py 下載pip ，但是我們install是<strong>windows</strong><span>版的(python</span><strong>w</strong><span>.exe)</span></p>
<p><span><span>要改成python.exe</span></span></p>
<p><img alt="" height="346" src="/images/1592584228542.jpg" width="511"/></p>
<p><img alt="" height="369" src="/images/1592583698891.jpg" width="507"/></p>
<p>ubuntu 安裝內容</p>
<p>第1部</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Mis9Vha9028" width="560"></iframe></p>
<p>第二部</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/JSmcyiQCoto" width="560"></iframe></p>
<h2>W16-W17</h2>
<p>WSGI</p>
<p><span>WSGI，全稱 Web Server Gateway Interface，或者 Python Web Server Gateway Interface ，是為 Python 語言定義的 Web 伺服器和 Web 應用程式或框架之間的一種簡單而通用的介面。</span><span>這東西是一個Gateway，也就是閘道器。閘道器的作用就是在協議之間進行轉換。</span></p>
<p>金鑰</p>
<p>python wsgi.py(打開你的Python)，缺少什麼軟件(pip install 軟件名稱)</p>
<p><img alt="" height="262" src="/images/1592592433259.jpg" width="506"/></p>
<p><img alt="" height="261" src="/images/1592592451469.jpg" width="502"/></p>
<p>進入googl  API   download   並且進入</p>
<p><img alt="" height="248" src="/images/1592592868463.jpg" width="291"/></p>
<p>設定使用者 及網域 和儲存ID及密碼(oauth_scrum.txt)</p>
<p><img alt="" height="386" src="/images/1592593703816.jpg" width="498"/></p>
<p></p>
<p>然後就有了(successful)<img alt="" height="235" src="/images/1592592848670.jpg" width="512"/></p>
<h1>加入ssh</h1>
<p><strong>創建SSH的Key</strong></p>
<p><span>(1)利用編輯器進入shell的命令環境</span><img alt="" height="531" src="/images/102.jpg" width="1012"/></p>
<p>(2)輸入指令</p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">ssh-keygen -t rsa -b 4096 -C "使用者學號"</pre>
<p> <img alt="" height="511" src="/images/100jpg.jpg" width="976"/></p>
<p><span>在 /y/tmp/key/id_rsa (自己設要放在哪裡)目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key</span></p>
<p><span><img alt="" height="795" src="/images/101.jpg" width="1122"/></span></p>
<p><span>(3)下載 Putty 工具組</span></p>
<p><span>接下來要利用 puttygen.exe </span></p>
<p><img alt="" height="547" src="/images/1592617751496.jpg" width="577"/></p>
<p>load(載入)  <span>將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式 並且 Save private key</span></p>
<p><span><img alt="" height="465" src="/images/104.jpg" width="516"/></span></p>
<p><span>(4)開啟 github settings 中的 SSH and GPD keys</span></p>
<p><span><img alt="" height="356" src="/images/105.jpg" width="221"/></span></p>
<p><span>新建New Key  把public key的碼放入(用scite 開啟)</span></p>
<p><span><img alt="" height="366" src="/images/106jpg.jpg" width="768"/></span></p>
<p>(5)<span>修改啟動的 start.bat 加入下列設定</span></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">set GIT_HOME=%Disk%:\portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe</pre>
<p><b>設定putty</b> </p>
<p><span>(1)home 下的 .ssh 目錄中的 config 設定檔案為</span></p>
<p><span><img alt="" height="383" src="/images/107.jpg" width="561"/></span></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false"># no proxy at home
#ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p
# set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup
ProxyCommand y:/putty/plink.exe github.com %h %p
  
Host github.com
    User git
    Port 22
    Hostname github.com
     
    # for connect.exe need openssh key format
    #IdentityFile "y:\home\.ssh\id_rsa_mdecourse"
    # for plink.exe need rsa key format but set under putty github.com session
    # plink.exe do not need the following setting
    #IdentityFile "y:\home\.ssh\mdecourse_putty_private.ppk"
  
    TCPKeepAlive yes
    IdentitiesOnly yes</pre>
<p><span>(2)wcm2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連      線</span></p>
<pre class="brush:dart;auto-links:false;toolbar:false" contenteditable="false">[core]
    repositoryformatversion = 0
    filemode = false
    bare = false
    logallrefupdates = true
    symlinks = false
    ignorecase = true
[submodule]
    active = .
[remote "origin"]
    #url = https://github.com/mdecourse/wcmj2020.git
    url = git@github.com:mdecourse/wcmj2020.git
    fetch = +refs/heads/*:refs/remotes/origin/*
[branch "master"]
    remote = origin
    merge = refs/heads/master
[submodule "cmsimde"]
    url = https://github.com/mdecourse/cmsimde.git</pre>
<p>(3)進入putty.exe 進行編輯<br/><span></span></p>
<p>設定代理主機<br/><span></span></p>
<p><span></span></p>
<p><img alt="" height="442" src="/images/擷取.JPG-1.jpg" width="452"/><br/><span></span></p>
<p><span>設定代理主機(Proxy)  除非是IPV4 IPV6</span></p>
<p><span><img alt="" height="431" src="/images/108.jpg" width="481"/></span></p>
<p><span>設定SSH的 ppk private key (之前轉的APK)</span></p>
<p><span><img alt="" height="433" src="/images/109.jpg" width="477"/></span></p>
<p><span>之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push</span></p>
<p><span></span></p>
<h1>網頁Cmsimde 建立方法</h1>
<p>(1)到github 新建一個repository(資料庫)</p>
<p><img alt="" height="668" src="/images/1592902479038.jpg" width="737"/></p>
<p>(2)在隨身系統新建一個tmp資料夾 (wcm2020new/tmp)</p>
<p><img alt="" height="793" src="/images/1592903130613.jpg" width="1118"/></p>
<p><span>(3)到github網站git clone自己倉儲的網址clone完後git submodule add</span></p>
<p><img alt="" height="530" src="/images/6.jpg" width="976"/></p>
<p></p>
<p>(4)進入cmsimde  把up_dir裡的東西全部複製</p>
<p><img alt="" height="798" src="/images/9.jpg" width="1124"/></p>
<p>放到cmsimde外面  wcm2020new的目錄下</p>
<p><img alt="" height="799" src="/images/3.jpg" width="1126"/></p>
<p><span>(5)進入cmsimde目錄下   將wsgi.py拖入SciTE     tools--&gt;go</span></p>
<p><span><img alt="" height="937" src="/images/2.jpg" width="851"/></span></p><h1>用@gm帳號建blog</h1>
<p>上google 搜尋 blog</p>
<p><img alt="" height="475" src="/images/11.jpg" width="953"/></p>
<p>登入自己的gmail</p>
<p><img alt="" height="539" src="/images/10.jpg" width="496"/></p>
<p>新建內容及網址</p>
<p><img alt="" height="392" src="/images/1592994204662.jpg" width="453"/></p>
<p>建立完成</p>
<p></p>
<p><img alt="" height="435" src="/images/1592993602072.jpg" width="932"/></p>
<p></p>
<p>網誌內容 完成</p>
<p></p>
<p><img alt="" height="464" src="/images/1592994021835.jpg" width="930"/></p>
<p></p>
<h1>如何在虛擬主機 git clone</h1>
<p>進入<span>VirtualBOX虛擬主機</span></p>
<p><span><img alt="" height="410" src="/images/1000000.jpg" width="547"/></span></p>
<p>進入程式集 裡面的 Terminal</p>
<p><img alt="" height="415" src="/images/300000.jpg" width="552"/></p>
<p><img alt="" height="411" src="/images/800000.jpg" width="549"/></p>
<p>進入後輸入指令</p>
<p><img alt="" height="416" src="/images/200000.jpg" width="551"/></p>
<p></p>
<p>完成後進入 file(文件)</p>
<p><img alt="" height="416" src="/images/5000000.jpg" width="555"/></p>
<p>就可以看到裡面有github   wcm2020 和裡面的檔案</p>
<p><img alt="" height="418" src="/images/400000.jpg" width="553"/></p>
<p><img alt="" height="421" src="/images/500000.jpg" width="561"/></p>
<h1>Pelican建立Blog</h1>
<p><span>安裝markdown、leo 和 pelican</span></p>
<p><img alt="" height="300" src="/images/9999999.jpg" width="549"/></p>
<p><span>加入disqus(加入評論系統)</span></p>
<p><img alt="" height="388" src="/images/888888888.jpg" width="546"/></p>
<p>修改pelican的資料</p>
<p>修改內容完先在靜端 執行  (對 local-blog 按右鍵--&gt;go to script<span>--&gt;複製pelican markdown -o blog -s local_publishconf.py--&gt;放入黑板</span>)</p>
<p><img alt="" height="396" src="/images/7.jpg" width="553"/></p>
<p>設定 共用</p>
<p><img alt="" height="393" src="/images/77.jpg" width="549"/></p>
<p>設定你的blog 的內容(標題、日期、名字)</p>
<p><img alt="" height="396" src="/images/777.jpg" width="550"/></p>
<p></p>
<p><span style="color: #ff0000;">如果要加圖片在blog 的話 </span></p>
<p>&lt;img src="  圖片網址 " width="400" height="350" alt="ub" align=center&gt;</p>
<p>如果靜端沒問題就 git push</p>
<p>blog 完成!!!!</p>
<p><img alt="" height="274" src="/images/0000000000000000000000000.jpg" width="567"/></p>
<p></p>
<p></p>
<p></p>